junit.jupiter.testclass.order.default=org.junit.jupiter.api.ClassOrderer$OrderAnnotation
#org.junit.jupiter.api.ClassOrderer$ClassName
#org.junit.jupiter.api.ClassOrderer$DisplayName
#org.junit.jupiter.api.ClassOrderer$Random

#parallel
junit.jupiter.execution.parallel.enabled = true

#Configuration parameters to execute top-level classes in parallel but methods in same thread
junit.jupiter.execution.parallel.mode.default = same_thread
junit.jupiter.execution.parallel.mode.classes.default = concurrent

#Configuration parameters to execute top-level classes sequentially but their methods in parallel
#junit.jupiter.execution.parallel.mode.default = concurrent
#junit.jupiter.execution.parallel.mode.classes.default = same_thread

#junit.jupiter.execution.parallel.config.strategy=dynamic
#junit.jupiter.execution.parallel.config.dynamic.factor=1

junit.jupiter.execution.parallel.config.strategy=fixed
junit.jupiter.execution.parallel.config.fixed.parallelism=3